name: CI
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}
permissions:
  contents: write
  pull-requests: write
jobs:
  commit:
    name: Commits
    if: ${{ github.ref != 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: JohnnyMorganz/stylua-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          version: latest
          args: --config-path .stylua.toml ./lua ./spec ./bin
      - name: Install commons.nvim
        if: ${{ github.ref != 'refs/heads/main' }}
        run: |
          git clone --depth=1 https://github.com/linrongbin16/commons.nvim.git ~/.commons.nvim
          rm -rf ./lua/fzfx/commons
          cp -rf ~/.commons.nvim/lua/commons ./lua/fzfx/
          cp ~/.commons.nvim/version.txt ./lua/fzfx/commons/version.txt
          find ./lua/fzfx/commons -type f -name '*.lua' -exec sed -i 's/require("commons/require("fzfx.commons/g' {} \;
      - uses: cargo-bins/cargo-binstall@main
      - name: Selene
        run: |
          cargo binstall --no-confirm selene
          selene --config selene.toml ./lua
      - uses: stevearc/nvim-typecheck-action@v2
        with:
          # nvim-version: v0.10.4
          path: lua
          configpath: ".luarc.json"
      - uses: stefanzweifel/git-auto-commit-action@v5
        if: ${{ github.ref != 'refs/heads/main' }}
        with:
          commit_message: "chore(pr): auto-commit"
          push_options: "--force"
  unit_test:
    name: Unit Test
    strategy:
      matrix:
        nvim_version: [stable, nightly]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: rhysd/action-setup-vim@v1
        id: vim
        with:
          neovim: true
          version: ${{ matrix.nvim_version }}
      - name: Run Tests
        run: |
          sudo apt-get update
          sudo apt-get install -q -y fd-find
          sudo apt-get install -q -y bat
          sudo ln -s $(which fdfind) /usr/local/bin/fd
          sudo ln -s $(which batcat) /usr/local/bin/bat
          sudo apt-get -y -qq install fzf
          make test
  release:
    name: Release
    if: ${{ github.ref == 'refs/heads/main' }}
    needs:
      - unit_test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: simple
          package-name: fzfx.nvim
      - uses: nvim-neorocks/luarocks-tag-release@v7
        if: ${{ steps.release.outputs.release_created }}
        env:
          LUAROCKS_API_KEY: ${{ secrets.LUAROCKS_API_KEY }}
        with:
          version: ${{ steps.release.outputs.tag_name }}
          copy_directories: |
            {{ neovim.plugin.dirs }}
            bin
            docs
            spec
          labels: |
            neovim
            vim
